/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/compressedFirstWatch6.glb");

  useFrame(({clock}) => {
    const a = clock.getElapsedTime();
    group.current.rotation.x = Math.PI / 1.75 + Math.cos(a / 4) / 8;
    group.current.rotation.y = Math.sin(a / 4) / 8;
    group.current.rotation.z = (1 + Math.sin(a / 1.5)) / 20;
    group.current.position.y = (1 + Math.sin(a / 1.5)) / 10;

    group.current.opacity = 0;
  })
  return (
    <group scale={30} ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Wheel.geometry}
        material={nodes.Wheel.material}
        position={[0.05359986, 0.00167413, 0]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={0.81800431}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Dial_1.geometry}
        material={materials.Dial}
        position={[0, 0.00252606, 0]}
        scale={0.04486918}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Dial_Wave.geometry}
        material={materials["Dial Wave"]}
        position={[0, 0.0218267, 0]}
        scale={-0.03296192}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Markings.geometry}
        material={nodes.Markings.material}
        position={[0, 0.01411833, -0.04028187]}
        scale={[0.00061711, 0.00044144, 0.0035175]}
      />
      <group
        position={[0, 0.00383926, 0]}
        rotation={[-Math.PI, 0.59687453, -Math.PI]}
        scale={-0.00139732}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane004.geometry}
          material={nodes.Plane004.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane004_1.geometry}
          material={nodes.Plane004_1.material}
        />
      </group>
      <group
        rotation={[0, 0.98032639, 0]}
        scale={[0.00127337, 0.00127337, 0.01301787]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane003.geometry}
          material={nodes.Plane003.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane003_1.geometry}
          material={nodes.Plane003_1.material}
        />
      </group>
      <group
        rotation={[0, -0.96897734, 0]}
        scale={[-0.00115023, -0.00115023, -0.01864257]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002.geometry}
          material={nodes.Plane002.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002_1.geometry}
          material={nodes.Plane002_1.material}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Case_2.geometry}
        material={nodes.Case_2.material}
        scale={0.05066706}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Case_1.geometry}
        material={nodes.Case_1.material}
      />
    </group>
  );
}

useGLTF.preload("/compressedFirstWatch6.glb");